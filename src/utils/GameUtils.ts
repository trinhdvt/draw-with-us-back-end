import {IMessage} from "../interfaces/IMessage";
import {ERoomEvent} from "../interfaces/IRoom";

const fromEn = "‚öôÔ∏è System: ";
const fromVi = "‚öôÔ∏è H·ªá th·ªëng: ";

type ParamEvent = ERoomEvent.JOIN | ERoomEvent.PLAYER_SUCCESS | ERoomEvent.NEXT_TURN;
type NoParamEvent = Exclude<ERoomEvent, ParamEvent>;

const GameMessages:
    | Record<NoParamEvent, IMessage>
    | Record<ParamEvent, (en: string, vi: string) => IMessage> = {
    [ERoomEvent.START]: {
        type: "warn",
        i18n: {
            en: {message: "Game has startedüéâ", from: fromEn},
            vi: {message: "Tr√≤ ch∆°i ƒë√£ b·∫Øt ƒë·∫ßu!!!", from: fromVi}
        }
    },
    [ERoomEvent.FINISH]: {
        type: "error",
        i18n: {
            en: {message: "Game has finished!!! Let's see the result üëÄ", from: fromEn},
            vi: {message: "Tr√≤ ch∆°i ƒë√£ k·∫øt th√∫c!!! H√£y xem k·∫øt qu·∫£ n√†o üëÄ", from: fromVi}
        }
    },
    [ERoomEvent.END_TURN]: {
        type: "warn",
        i18n: {
            en: {message: "Time out!!! Let's take a rest‚åõÔ∏è", from: fromEn},
            vi: {message: "H·∫øt gi·ªù!!! Ngh·ªâ ng∆°i m·ªôt ch√∫t n√†o‚åõÔ∏è", from: fromVi}
        }
    },
    [ERoomEvent.PLAYER_SUCCESS]: (en: string, vi: string) => ({
        type: "success",
        i18n: {
            en: {message: `${en} has done a correct drawing!üëè`},
            vi: {message: `${vi} ƒë√£ v·∫Ω ch√≠nh x√°c!üëè`}
        }
    }),
    [ERoomEvent.NEXT_TURN]: (en: string, vi: string) => ({
        type: "warn",
        i18n: {
            en: {message: `The next topic is üî•${en}üî•`, from: fromEn},
            vi: {message: `Ch·ªß ƒë·ªÅ ti·∫øp theo l√† üî•${vi}üî•`, from: fromVi}
        }
    }),
    [ERoomEvent.JOIN]: (en: string, vi: string) => ({
        type: "success",
        i18n: {
            en: {message: `${en} joined the room!`, from: fromEn},
            vi: {message: `${vi} ƒë√£ tham gia ph√≤ng!`, from: fromVi}
        }
    })
};

export default GameMessages;
